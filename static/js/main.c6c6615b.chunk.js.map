{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","Fragment","class","href","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","role","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iKAAAA,EAAOC,QAAU,IAA0B,kC,2FCgH5BC,G,gBAvGH,kBACR,kBAAC,IAAMC,SAAP,KACA,yBAAKC,MAAM,yDACT,uBAAGA,MAAM,eAAeC,KAAK,KAAI,yBAAKC,IAAI,8DAC1C,4BAAQF,MAAM,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,yBAAyBC,gBAAc,wBAAwBC,gBAAc,QAAQC,aAAW,qBAC9K,0BAAMR,MAAM,yBAGd,yBAAKA,MAAM,2BAA2BS,GAAG,yBACvC,wBAAIT,MAAM,sBACR,wBAAIA,MAAM,mBACR,uBAAGA,MAAM,WAAWC,KAAK,KAAzB,QAAkC,0BAAMD,MAAM,WAAZ,eAEpC,wBAAIA,MAAM,YACR,uBAAGA,MAAM,WAAWC,KAAK,KAAzB,cAEF,wBAAID,MAAM,YACR,uBAAGA,MAAM,WAAWC,KAAK,KAAzB,iBAEF,wBAAID,MAAM,qBACR,uBAAGA,MAAM,2BAA2BC,KAAK,IAAIQ,GAAG,aAAaL,cAAY,WAAWM,gBAAc,OAAOH,gBAAc,SAAvH,YACA,yBAAKP,MAAM,gBAAgBW,kBAAgB,cACzC,uBAAGX,MAAM,gBAAgBC,KAAK,KAA9B,YACA,uBAAGD,MAAM,gBAAgBC,KAAK,KAA9B,cACA,uBAAGD,MAAM,gBAAgBC,KAAK,KAA9B,oBAIN,0BAAMD,MAAM,4BACV,2BAAOA,MAAM,uBAAuBG,KAAK,OAAOS,YAAY,SAASJ,aAAW,WAChF,4BAAQR,MAAM,uCAAuCG,KAAK,UAA1D,aAKN,0BAAMU,KAAK,QAET,6BAASb,MAAM,yBACb,yBAAKA,MAAM,aACT,wBAAIA,MAAM,qBAAV,wCACA,uBAAGA,MAAM,mBAAT,uLACA,2BACE,uBAAGC,KAAK,IAAID,MAAM,wBAAlB,uBACA,uBAAGC,KAAK,IAAID,MAAM,0BAAlB,uBAKN,yBAAKA,MAAM,uBACT,yBAAKA,MAAM,aAET,yBAAKA,MAAM,OACT,yBAAKA,MAAM,YACT,yBAAKA,MAAM,wBACT,yBAAKA,MAAM,aACT,uBAAGA,MAAM,aAAT,2JACA,yBAAKA,MAAM,qDACT,yBAAKA,MAAM,aACT,4BAAQG,KAAK,SAASH,MAAM,oCAA5B,SAEF,2BAAOA,MAAM,cAAb,cAKR,yBAAKA,MAAM,YACT,yBAAKA,MAAM,wBACT,yBAAKA,MAAM,aACT,uBAAGA,MAAM,aAAT,uKACA,yBAAKA,MAAM,qDACT,yBAAKA,MAAM,aACT,4BAAQG,KAAK,SAASH,MAAM,oCAA5B,SAEF,2BAAOA,MAAM,cAAb,cAKR,yBAAKA,MAAM,YACT,yBAAKA,MAAM,wBACT,yBAAKA,MAAM,aACT,uBAAGA,MAAM,aAAT,+IACA,yBAAKA,MAAM,qDACT,yBAAKA,MAAM,aACT,4BAAQG,KAAK,SAASH,MAAM,oCAA5B,SAEF,2BAAOA,MAAM,cAAb,qBCnFAc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c6c6615b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\n\n\nconst App = () => (\n    <React.Fragment>\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n      <a class=\"navbar-brand\" href=\"#\"><img src=\"https://avatars2.githubusercontent.com/u/900867?s=30&v=4\"/></a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Community</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Universities</a>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Code Day</a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n              <a class=\"dropdown-item\" href=\"#\">May 2020</a>\n              <a class=\"dropdown-item\" href=\"#\">April 2020</a>\n              <a class=\"dropdown-item\" href=\"#\">February 2020</a>\n            </div>\n          </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n          <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </nav>\n\n    <main role=\"main\">\n\n      <section class=\"jumbotron text-center\">\n        <div class=\"container\">\n          <h1 class=\"jumbotron-heading\">Static ReactJS app from Github Pages</h1>\n          <p class=\"lead text-muted\">Something short and leading about the collection belowâ€”its contents, the creator, etc. Make it short and sweet, but not too short so folks don't simply skip over it entirely.</p>\n          <p>\n            <a href=\"#\" class=\"btn btn-primary my-2\">Main call to action</a>\n            <a href=\"#\" class=\"btn btn-secondary my-2\">Secondary action</a>\n          </p>\n        </div>\n      </section>\n\n      <div class=\"album py-5 bg-light\">\n        <div class=\"container\">\n\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"card mb-4 box-shadow\">\n                <div class=\"card-body\">\n                  <p class=\"card-text\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500.</p>\n                  <div class=\"d-flex justify-content-between align-items-center\">\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">View</button>\n                    </div>\n                    <small class=\"text-muted\">9 mins</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"card mb-4 box-shadow\">\n                <div class=\"card-body\">\n                  <p class=\"card-text\">Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.</p>\n                  <div class=\"d-flex justify-content-between align-items-center\">\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">View</button>\n                    </div>\n                    <small class=\"text-muted\">9 mins</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"card mb-4 box-shadow\">\n                <div class=\"card-body\">\n                  <p class=\"card-text\">There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour.</p>\n                  <div class=\"d-flex justify-content-between align-items-center\">\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">View</button>\n                    </div>\n                    <small class=\"text-muted\">9 mins</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            \n          </div>\n        </div>\n      </div>\n\n    </main>\n\n    </React.Fragment>\n\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}